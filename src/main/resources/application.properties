quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.level=INFO
quarkus.log.console.enable=true
quarkus.http.port=8080
quarkus.ssl.native=true
quarkus.swagger-ui.always-include=true
quarkus.openshift.expose=true
quarkus.openshift.env-vars.kafka-public.configmap=item-aggregator-cm
quarkus.container-image.tag=0.0.5 

quarkus.container-image.name=item-aggregator

# streams options
group.min.session.timeout.ms=7000
hostname=localhost
kafka.bootstrap.servers=${KAFKA_BROKERS:kafka:9092}
kafka.security.protocol=SSL
kafka.ssl.protocol=TLSv1.2
%dev.kafka.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username=${KAFKA_USER} password=${KAFKA_PASSWORD};
kafka.ssl.truststore.location=${KAFKA_CERT_PATH}
kafka.ssl.truststore.password=${KAFKA_CERT_PWD}
kafka.ssl.truststore.type=PKCS12
kafka.ssl.keystore.location=${USER_CERT_PATH}
kafka.ssl.keystore.password=${USER_CERT_PWD}
kafka.ssl.keystore.type=PKCS12


kafka-streams.auto.offset.reset=latest
kafka-streams.health.enabled=true
kafka-streams.consumer.session.timeout.ms=7000
kafka-streams.consumer.heartbeat.interval.ms=200
kafka-streams.application-id=item-aggregator
quarkus.kafka-streams.topics=items,inventory
quarkus.kafka-streams.bootstrap-servers=${KAFKA_BROKERS}
quarkus.kafka-streams.security.protocol=SSL
quarkus.kafka-streams.ssl.protocol=TLSv1.2
# quarkus.kafka-streams.sasl.mechanism=SCRAM-SHA-512
%dev.quarkus.kafka-streams.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username=${KAFKA_USER} password=${KAFKA_PASSWORD};
quarkus.kafka-streams.ssl.truststore.location=${KAFKA_CERT_PATH}
quarkus.kafka-streams.ssl.truststore.password=${KAFKA_CERT_PWD}
quarkus.kafka-streams.ssl.truststore.type=PKCS12
quarkus.kafka-streams.ssl.keystore.location=${USER_CERT_PATH}
quarkus.kafka-streams.ssl.keystore.password=${USER_CERT_PWD}
quarkus.kafka-streams.ssl.keystore.type=PKCS12
quarkus.kafka-streams.application-server=${hostname}:8080
quarkus.kafka-streams.default.deserialization.exception.handler=org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
mp.messaging.outgoing.inventory-channel.connector=smallrye-kafka
mp.messaging.outgoing.inventory-channel.topic=inventory
mp.messaging.outgoing.inventory-channel.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.inventory-channel.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer


mp.messaging.incoming.item-channel.connector=smallrye-kafka
mp.messaging.incoming.item-channel.topic=items
mp.messaging.incoming.item-channel.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.item-channel.value.deserializer=ibm.gse.eda.inventory.infrastructure.ItemDeserializer
mp.messaging.incoming.item-channel.group.id=item-aggregator





